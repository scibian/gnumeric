#!/usr/bin/perl -w
#
#  Gnumeric
#
#  Copyright (C) 2009 Morten Welinder.
#
#  This program is free software; you can redistribute it and/or
#  modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation; either version 2 of the
#  License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this library; if not, write to the Free Software
#  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#  Author: Morten Welinder <terra@gnome.org>

use strict;
use XML::Parser;

my $exitcode = 0;
my $verbose = 0;

die "$0: must be run from top-level directory.\n"
    unless -r "configure.ac" && -r 'ChangeLog';

my %exceptions = ();

my @files;
{
    local (*FIND);
    open (*FIND, "find . '(' -name \*.ui -type f -print ')' -o '(' -type d '(' -name .git -o -name win32 -o -name intl -o -name macros ')' -prune ')' |")
	or die "$0: cannot execute find: $!\n";
    foreach my $filename (<FIND>) {
	chomp $filename;
	$filename =~ s|^\./||;
	next if $exceptions{$filename};
	push @files, $filename;
    }
    close (*FIND);
}


{
    my $parser = new XML::Parser ('Style' => 'Tree');
  FILE:
    foreach my $filename (@files) {
	print STDERR "Parsing $filename\n" if $verbose;
	eval {
	    my $tree = $parser->parsefile ($filename);
	};
	if ($@) {
	    print STDERR "File $filename doesn't parse: $@\n";
	    $exitcode = 1;
	}
    }
}

exit $exitcode;
